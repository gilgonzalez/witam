---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { formatDate } from '../../utils/formatDate';

// Para SSR, necesitamos usar getEntry en lugar de getStaticPaths
const { slug } = Astro.params;

// Intentar obtener la entrada del blog por slug
let entry;
let Content;
try {
  const allBlogEntries = await getCollection('blog');
  entry = allBlogEntries.find(post => post.slug === slug);
  
  if (entry) {
    const rendered = await entry.render();
    Content = rendered.Content;
  }
} catch (error) {
  console.error(`Error al cargar la entrada del blog: ${error}`);
}
---
<Layout>
{entry && Content ? (
  <div class="container mx-auto py-8 px-4 md:px-6 lg:px-16 max-w-4xl">
    <div class="mb-8">
      <a href="/blog" class="text-amber-800 hover:underline mb-4 inline-block">
        &larr; Volver al blog
      </a>
      
      <h1 class="text-3xl md:text-4xl font-bold mb-4">{entry.data.title}</h1>
      
      <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600 mb-6">
        <div class="flex items-center gap-1">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
            <line x1="16" y1="2" x2="16" y2="6"></line>
            <line x1="8" y1="2" x2="8" y2="6"></line>
            <line x1="3" y1="10" x2="21" y2="10"></line>
          </svg>
          <span>{formatDate(entry.data.pubDate)}</span>
        </div>
        
        <div class="flex items-center gap-1">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
            <circle cx="12" cy="7" r="4"></circle>
          </svg>
          <span>{entry.data.author}</span>
        </div>
      </div>
      
      {entry.data.tags && entry.data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-6">
          {entry.data.tags.map((tag: string) => (
            <span class="bg-orange-100 text-sm px-3 py-1 rounded-full">{tag}</span>
          ))}
        </div>
      )}
    </div>
    
    <div class="overflow-hidden rounded-lg mb-8">
      <img 
        src={entry.data.image.url} 
        alt={entry.data.image.alt} 
        class="w-full h-auto object-cover" 
        transition:name={`blog-image-${entry.slug}`}
      />
    </div>
    
    <article class="prose prose-amber max-w-none">
      <Content />
    </article>
  </div>
) : (
  <div class="container mx-auto py-16 text-center">
    <h1 class="text-3xl font-bold mb-4">Entrada no encontrada</h1>
    <p class="mb-8">Lo sentimos, la entrada de blog que buscas no existe o ha sido eliminada.</p>
    <a href="/blog" class="text-amber-800 hover:underline">Volver al blog</a>
  </div>
)}
</Layout>
