---
// Obtener la ruta actual para determinar qué enlace debe estar en negrita
const currentPath = Astro.url.pathname;

// Importar el SVG como componente
import witamLogoWhite from '../assets/svg/witam-white-icon.svg';
import witamLogo from '../assets/svg/witam-icon.svg';
---

<div id="HEADER" class="bg-black w-full h-auto flex items-center justify-between px-8 py-4 z-20 relative">
    {/*LOGO */}
    <div id="LOGO" class="text-white text-2xl font-bold flex">
        <img src={witamLogoWhite.src} alt="WITAM" width="120" height="30" />
    </div>
    
    {/* BOTÓN HAMBURGUESA (visible solo en móvil) */}
    <button id="menuBtn" class="text-white text-2xl md:hidden focus:outline-none z-30">
        <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="30" height="30" viewBox="0 0 50 50" fill="white"> 
            <path d="M 5 8 A 2.0002 2.0002 0 1 0 5 12 L 45 12 A 2.0002 2.0002 0 1 0 45 8 L 5 8 z M 5 23 A 2.0002 2.0002 0 1 0 5 27 L 45 27 A 2.0002 2.0002 0 1 0 45 23 L 5 23 z M 5 38 A 2.0002 2.0002 0 1 0 5 42 L 45 42 A 2.0002 2.0002 0 1 0 45 38 L 5 38 z"></path> 
        </svg>
    </button>
    
    {/* OVERLAY PARA FONDO OSCURO */}
    <div id="menuOverlay" class="fixed inset-0 bg-black bg-opacity-50 z-10 hidden transition-opacity duration-300 opacity-0"></div>
    
    {/* ENLACES - ESTILO DRAWER/SHEET */}
    <div id="LINKS" class="md:flex flex-1 bg-white text-white fixed md:relative top-0 right-0 md:right-auto h-full md:h-auto transform translate-x-full md:translate-x-0  md:bg-transparent transition-transform duration-300 ease-in-out z-20 shadow-lg md:shadow-none flex-col md:flex-row w-80 md:w-auto p-0 md:p-0">
        <div class="w-full py-6 px-6 md:hidden border-b border-gray-200">
            <button id="closeMenuBtn" class="absolute top-4 right-4 text-gray-500 hover:text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <line x1="18" y1="6" x2="6" y2="18"></line>
                    <line x1="6" y1="6" x2="18" y2="18"></line>
                </svg>
            </button>
            <div id="LOGO" class="text-black text-2xl font-bold flex flex-1">
                <img src={witamLogo.src} alt="WITAM" width="120" height="30" />
            </div>
        </div>
        <div class="flex-1"/>
        <div class="flex flex-1 flex-col w-full md:flex-row min-w-fit items-center justify-between md:place-self-end">
            <a href="/" class={`header-link ${currentPath === '/' ? 'font-bold' : 'font-light'}`}>Home</a>
            <a href="/junta-directiva" class={`header-link ${currentPath === '/junta-directiva' ? 'font-bold' : 'font-light'}`}>Junta directiva</a>
            <a href="/socios-colaboradoras" class={` header-link ${currentPath === '/socios-colaboradoras' ? 'font-bold' : 'font-light'}`}>Socios y colaboradoras</a>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        const menuBtn = document.getElementById('menuBtn');
        const closeMenuBtn = document.getElementById('closeMenuBtn');
        const links = document.getElementById('LINKS');
        const overlay = document.getElementById('menuOverlay');
        const hamburgerIcon = menuBtn?.querySelector('.hamburger-icon');
        
        if (menuBtn && links && overlay && closeMenuBtn) {
            // Función para abrir el menú
            const openMenu = () => {
                links.classList.remove('translate-x-full');
                overlay.classList.remove('hidden');
                setTimeout(() => {
                    overlay.classList.add('opacity-70');
                }, 10);
                hamburgerIcon?.classList.add('active');
                document.body.classList.add('no-scroll');
            };
            
            // Función para cerrar el menú
            const closeMenu = () => {
                links.classList.add('translate-x-full');
                overlay.classList.add('opacity-0');
                setTimeout(() => {
                    overlay.classList.add('hidden');
                }, 300);
                hamburgerIcon?.classList.remove('active');
                document.body.classList.remove('no-scroll');
            };
            
            // Abrir menú al hacer clic en el botón hamburguesa
            menuBtn.addEventListener('click', openMenu);
            
            // Cerrar menú al hacer clic en el botón de cerrar
            closeMenuBtn.addEventListener('click', closeMenu);
            
            // Cerrar el menú al hacer clic en el overlay
            overlay.addEventListener('click', closeMenu);
            
            // Cerrar el menú al hacer clic en un enlace
            const menuLinks = links.querySelectorAll('a');
            menuLinks.forEach(link => {
                link.addEventListener('click', closeMenu);
            });
            
            // Ajustar el comportamiento en cambios de tamaño de pantalla
            window.addEventListener('resize', () => {
                if (window.innerWidth >= 768) { // md breakpoint
                    links.classList.remove('translate-x-full');
                    overlay.classList.add('hidden', 'opacity-0');
                    hamburgerIcon?.classList.remove('active');
                    document.body.classList.remove('no-scroll');
                } else if (!hamburgerIcon?.classList.contains('active')) {
                    links.classList.add('translate-x-full');
                }
            });
        }
    });
</script>