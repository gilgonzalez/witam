---
import { formatDate } from '../utils/formatDate';

interface Props {
  url: string;
  title: string;
  description: string;
  pubDate: Date;
  author: string;
  image: {
    url: string;
    alt: string;
  };
  tags?: string[];
}

const { url, title, description, pubDate, author, image, tags } = Astro.props;
const formattedDate = formatDate(pubDate);
const slug = url.split('/').pop(); // Extraer el slug de la URL
---

<a href={url} class="blog-card group">
  <div class="overflow-hidden rounded-lg mb-4">
    <img 
      src={image.url} 
      alt={image.alt} 
      class="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-105" 
      transition:name={`blog-image-${slug}`}
    />
  </div>
  
  <div class="p-2">
    <h3 class="text-xl font-bold mb-2 group-hover:text-amber-800 transition-colors">{title}</h3>
    
    <div class="flex flex-wrap items-center gap-4 text-xs text-gray-600 mb-3">
      <div class="flex items-center gap-1">
        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
          <line x1="16" y1="2" x2="16" y2="6"></line>
          <line x1="8" y1="2" x2="8" y2="6"></line>
          <line x1="3" y1="10" x2="21" y2="10"></line>
        </svg>
        <span>{formattedDate}</span>
      </div>
      
      <div class="flex items-center gap-1">
        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
          <circle cx="12" cy="7" r="4"></circle>
        </svg>
        <span>{author}</span>
      </div>
    </div>
    
    <p class="text-sm text-gray-700 mb-3 line-clamp-2">{description}</p>
    
    {tags && tags.length > 0 && (
      <div class="flex flex-wrap gap-1">
        {tags.slice(0, 3).map((tag: string) => (
          <span class="bg-orange-100 text-xs px-2 py-0.5 rounded-full">{tag}</span>
        ))}
        {tags.length > 3 && <span class="text-xs text-gray-500">+{tags.length - 3}</span>}
      </div>
    )}
  </div>
</a>


